{"version":3,"file":"catalogTabs.js","mappings":"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","sources":["webpack:///./catalog-tabs.js","webpack:///./filters-range.js"],"sourcesContent":["export function catalogTabs() {\n\tconst tabs = document.querySelectorAll('.catalog-tabs button');\n\tconst inputRows = document.querySelectorAll('.input-row');\n\tconst buttonDecor = document.querySelector('.button-decor');\n\n\tif (!tabs || !inputRows || !buttonDecor) return;\n\n\ttabs.forEach(tab => {\n\t\ttab.addEventListener('click', () => {\n\t\t\tconst target = tab.getAttribute('data-tab');\n\n\t\t\tinputRows.forEach(row => {\n\t\t\t\trow.style.display = row.getAttribute('data-input') === target ? 'flex' : 'none';\n\t\t\t});\n\n\t\t\ttabs.forEach(button => button.classList.remove('active'));\n\t\t\ttab.classList.add('active');\n\n\n\t\t\tconst tabRect = tab.getBoundingClientRect();\n\t\t\tconst tabsRect = tab.parentNode.getBoundingClientRect();\n\n\t\t\tbuttonDecor.style.width = `${tabRect.width}px`;\n\t\t\tbuttonDecor.style.transform = `translateX(${tabRect.left - tabsRect.left}px)`;\n\t\t});\n\t});\n\n\n\tinputRows.forEach(row => row.style.display = 'none');\n\tconst firstTab = tabs[0];\n\tfirstTab.classList.add('active');\n\tdocument.querySelector(`.input-row[data-input=\"${firstTab.getAttribute('data-tab')}\"]`).style.display = 'flex';\n\n\tconst firstTabRect = firstTab.getBoundingClientRect();\n\tconst tabsRect = firstTab.parentNode.getBoundingClientRect();\n\tbuttonDecor.style.width = `${firstTabRect.width}px`;\n\tbuttonDecor.style.height = `${firstTabRect.height}px`;\n\tbuttonDecor.style.transform = `translateX(${firstTabRect.left - tabsRect.left}px)`;\n}\n","export function filtersRange() {\n    const minValueInput = document.getElementById('minValue');\n    const maxValueInput = document.getElementById('maxValue');\n    const minHandler = document.querySelector('.min-hanler');\n    const maxHandler = document.querySelector('.max-handler');\n    const rangeWrapper = document.querySelector('.range-wrapper');\n\n    const maxLimit = parseInt(maxValueInput.max) + 1;\n    const rangeWidth = rangeWrapper.offsetWidth;\n    const handlerWidth = minHandler.offsetWidth;\n\n    function updateInputValue(input, handler) {\n        const percentage = (handler.offsetLeft / rangeWidth);\n        const value = Math.round(percentage * maxLimit);\n        input.value = value;\n\n        const changeEvent = new Event('change');\n        input.dispatchEvent(changeEvent);\n    }\n\n\n    function setInitialHandlerPositions() {\n\n        const minValue = parseInt(minValueInput.value);\n        const maxValue = parseInt(maxValueInput.value);\n\n        const minPosition = (minValue / maxLimit) * rangeWidth;\n        minHandler.style.left = `${minPosition}px`;\n        updateInputValue(minValueInput, minHandler);\n\n        const maxPosition = (maxValue / maxLimit) * rangeWidth;\n        maxHandler.style.left = `${maxPosition}px`;\n        updateInputValue(maxValueInput, maxHandler);\n    }\n\n    minHandler.addEventListener('pointerdown', (e) => {\n        document.addEventListener('pointermove', onMouseMoveMin);\n        document.addEventListener('pointerup', onMouseUp);\n        minHandler.setPointerCapture(e.pointerId);\n    });\n\n    maxHandler.addEventListener('pointerdown', (e) => {\n        document.addEventListener('pointermove', onMouseMoveMax);\n        document.addEventListener('pointerup', onMouseUp);\n        maxHandler.setPointerCapture(e.pointerId);\n    });\n\n    function onMouseMoveMin(e) {\n        let newLeft = e.clientX - rangeWrapper.getBoundingClientRect().left - handlerWidth * 0.4;\n        newLeft = Math.min(maxHandler.offsetLeft - handlerWidth * 0.4, Math.max(0, newLeft));\n        minHandler.style.left = `${newLeft}px`;\n        updateInputValue(minValueInput, minHandler);\n    }\n\n    function onMouseMoveMax(e) {\n        let newLeft = e.clientX - rangeWrapper.getBoundingClientRect().left - handlerWidth * 0.4;\n        newLeft = Math.max(minHandler.offsetLeft + handlerWidth * 0.4, Math.min(rangeWidth - handlerWidth * 0.6, newLeft));\n        maxHandler.style.left = `${newLeft}px`;\n        updateInputValue(maxValueInput, maxHandler);\n    }\n\n\n    function onMouseUp(e) {\n        document.removeEventListener('pointermove', onMouseMoveMin);\n        document.removeEventListener('pointermove', onMouseMoveMax);\n        document.removeEventListener('pointerup', onMouseUp);\n    }\n\n    setInitialHandlerPositions();\n}\n"],"names":["tabsRect"],"sourceRoot":""}