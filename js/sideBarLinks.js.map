{"version":3,"file":"sideBarLinks.js","mappings":";;;;;;;;;;;;;AAAO,SAAS,eAAe;AAC3B,QAAM,WAAW,SAAS,iBAAiB,qBAAqB;AAChE,MAAI,iBAAiB;AAErB,WAAS,QAAQ,SAAO;AACpB,UAAM,mBAAmB,IAAI,cAAc,GAAG,KAAK,IAAI,cAAc,GAAG;AAExE,QAAI,kBAAkB;AAClB,uBAAiB,iBAAiB,SAAS,CAAC,UAAU;AAClD,YAAI,iBAAiB,YAAY,OAAO,CAAC,IAAI,oBAAoB;AAE9D;AAAA,QACH,OAAO;AACH,gBAAM,eAAe;AAAA,QACzB;AAGA,cAAM,qBAAqB,IAAI;AAE/B,YAAI,sBAAsB,mBAAmB,UAAU,SAAS,eAAe,GAAG;AAE9E,cAAI,kBAAkB,mBAAmB,oBAAoB;AACzD,2BAAe,UAAU,OAAO,MAAM;AACtC,2BAAe,uBAAuB,UAAU,OAAO,MAAM;AAAA,UACjE;AAEA,6BAAmB,UAAU,OAAO,MAAM;AAAA,QAE9C;AAEC,YAAI,UAAU,OAAO,MAAM;AAE5B,YAAG,oBAAmB;AAClB,2BAAiB,mBAAmB,UAAU,SAAS,MAAM,IAAI,qBAAqB;AAAA,QAC1F,OAAO;AAEH,cAAG,IAAI,UAAU,SAAS,MAAM,GAAE;AAC9B,6BAAiB;AAAA,UACrB,OAAO;AACH,gBAAG,gBAAgB;AACf,6BAAe,UAAU,OAAO,MAAM;AACtC,6BAAe,uBAAuB,UAAU,OAAO,MAAM;AAC7D,+BAAiB;AAAA,YACrB;AAAA,UACJ;AAAA,QACJ;AAEA,cAAM,aAAa,IAAI,UAAU,SAAS,MAAM;AAChD,YAAI,aAAa,iBAAiB,UAAU;AAC5C,YAAG,oBAAmB;AAClB,6BAAmB,aAAa,eAAe,CAAC,UAAU;AAAA,QAC9D;AAAA,MAEJ,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AAED,WAAS,iBAAiB,SAAS,CAAC,UAAU;AAC1C,QAAI,kBAAkB,CAAC,eAAe,SAAS,MAAM,MAAM,KAAK,CAAC,eAAe,uBAAuB,SAAS,MAAM,MAAM,GAAG;AAC3H,qBAAe,UAAU,OAAO,MAAM;AACtC,qBAAe,uBAAuB,UAAU,OAAO,MAAM;AAC7D,qBAAe,uBAAuB,aAAa,iBAAiB,KAAK;AACzE,qBAAe,aAAa,eAAe,IAAI;AAC/C,uBAAiB;AAAA,IACrB;AAAA,EACJ,CAAC;AACL","sources":["webpack:///./helpers/side-bar-links.js"],"sourcesContent":["export function sideBarLinks() {\n    const menuRows = document.querySelectorAll('.side-bar__menu-row');\n    let activeDropdown = null;\n\n    menuRows.forEach(row => {\n        const clickableElement = row.querySelector('b') || row.querySelector('a');\n\n        if (clickableElement) {\n            clickableElement.addEventListener('click', (event) => {\n                if (clickableElement.tagName === 'A' && !row.nextElementSibling) {\n\n                   return;\n                } else {\n                    event.preventDefault();\n                }\n\n\n                const associatedDropdown = row.nextElementSibling;\n\n                if (associatedDropdown && associatedDropdown.classList.contains('dropdown-menu')) {\n\n                    if (activeDropdown && activeDropdown !== associatedDropdown) {\n                        activeDropdown.classList.remove('open');\n                        activeDropdown.previousElementSibling.classList.remove('open');\n                    }\n\n                    associatedDropdown.classList.toggle('open');\n\n                }\n\n                 row.classList.toggle('open');\n\n                if(associatedDropdown){\n                    activeDropdown = associatedDropdown.classList.contains('open') ? associatedDropdown : null;\n                } else {\n\n                    if(row.classList.contains('open')){\n                        activeDropdown = null;\n                    } else {\n                        if(activeDropdown) {\n                            activeDropdown.classList.remove('open');\n                            activeDropdown.previousElementSibling.classList.remove('open');\n                            activeDropdown = null;\n                        }\n                    }\n                }\n\n                const isExpanded = row.classList.contains('open');\n                row.setAttribute('aria-expanded', isExpanded);\n                if(associatedDropdown){\n                    associatedDropdown.setAttribute('aria-hidden', !isExpanded);\n                }\n\n            });\n        }\n    });\n\n    document.addEventListener('click', (event) => {\n        if (activeDropdown && !activeDropdown.contains(event.target) && !activeDropdown.previousElementSibling.contains(event.target)) {\n            activeDropdown.classList.remove('open');\n            activeDropdown.previousElementSibling.classList.remove('open');\n            activeDropdown.previousElementSibling.setAttribute('aria-expanded', false);\n            activeDropdown.setAttribute('aria-hidden', true);\n            activeDropdown = null;\n        }\n    });\n}\n"],"names":[],"sourceRoot":""}